version: '3.8'

services:
  # Main application
  agentic-swarm:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - LOG_LEVEL=INFO
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/architecture_governance
      - REDIS_URL=redis://redis:6379/0
      - MONGODB_URL=mongodb://mongo:27017/architecture_governance
    depends_on:
      - postgres
      - redis
      - mongo
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - agentic-swarm-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=architecture_governance
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - agentic-swarm-network

  # Redis for caching and messaging
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - agentic-swarm-network

  # MongoDB for document storage
  mongo:
    image: mongo:6
    environment:
      - MONGO_INITDB_DATABASE=architecture_governance
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - agentic-swarm-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - agentic-swarm
    restart: unless-stopped
    networks:
      - agentic-swarm-network

volumes:
  postgres_data:
  redis_data:
  mongo_data:

networks:
  agentic-swarm-network:
    driver: bridge
